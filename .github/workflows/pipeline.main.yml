name: spellbook_gmbh_wordpress main

run-name: ${{ github.event.head_commit.message }}
on: 
  push: 
    branches: 
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v4

      - name: Compose up
        uses: hoverkraft-tech/compose-action@v2.0.0


  push_to_DockerHub:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Dockerhub
        uses: actions/checkout@v4

      - name: Build and push Wordpress
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spellbook_gmbh_wordpress:latest
          build-args: |
            WORDPRESS_DB_NAME=${{secrets.WORDPRESS_DB_NAME}}
            WORDPRESS_DB_USER=${{secrets.WORDPRESS_DB_USER}}
            WORDPRESS_DB_PASSWORD=${{secrets.WORDPRESS_DB_PASSWORD}}
            WORDPRESS_VERSION=${{vars.WORDPRESS_VERSION}}
      
      - name: Build and push DB
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: db.Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spellbook_gmbh_db:latest
          build-args: |
            WORDPRESS_DB_NAME=${{secrets.WORDPRESS_DB_NAME}}
            WORDPRESS_DB_USER=${{secrets.WORDPRESS_DB_USER}}
            WORDPRESS_DB_PASSWORD=${{secrets.WORDPRESS_DB_PASSWORD}}
            MYSQL_ROOT_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD}}
            MYSQL_VERSION=${{vars.MYSQL_VERSION}}
          

  deploy_to_server:
    runs-on: ubuntu-latest
    needs: push_to_DockerHub

    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with: 
          host: spellbook-gmbh.de
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          debug: true
          # pull new image, remove left overs from old image, start microservice
          script: |
            docker compose pull
            yes | docker rm $(docker container ls --all --filter=ancestor=$(docker images -f "dangling=true" -q) --format "{{.ID}}") --force
            yes | docker image rm $(docker images -f "dangling=true" -q)
            docker compose up -d