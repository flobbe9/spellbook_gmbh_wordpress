name: spellbook_ug_wordpress main

run-name: ${{ github.event.head_commit.message }}
on: 
  push: 
    branches: 
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository 
        uses: actions/checkout@v4

        # TODO: run to test
     

  push_to_DockerHub:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build db and wordpress images
        run: cd ../../spellbook_ug_wordpress/spellbook_ug_wordpress/src && docker-compose build --build-arg WORDPRESS_DB_NAME=${{secrets.WORDPRESS_DB_NAME}} --build-arg WORDPRESS_DB_USER=${{secrets.WORDPRESS_DB_USER}} --build-arg WORDPRESS_DB_PASSWORD=${{secrets.WORDPRESS_DB_PASSWORD}} --build-arg MYSQL_ROOT_PASSWORD=${{secrets.MYSQL_ROOT_PASSWORD}}

      - name: Push images to Dockerhub
        run: cd ../../spellbook_ug_wordpress/spellbook_ug_wordpress/src && docker-compose push

  # deploy_to_server:
  #   runs-on: ubuntu-latest
  #   needs: push_to_DockerHub

  #   steps:
  #     - uses: appleboy/ssh-action@v1.0.3
  #       with: 
  #         host: word-light.de
  #         username: ${{ secrets.SSH_USER_NAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         debug: true
  #         # pull new image, remove left overs from old image, start microservice
  #         script: |
  #           docker-compose pull
  #           yes | docker rm $(docker container ls --all --filter=ancestor=$(docker images -f "dangling=true" -q) --format "{{.ID}}") --force
  #           yes | docker image rm $(docker images -f "dangling=true" -q)
  #           docker-compose up -d